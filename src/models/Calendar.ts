/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Box } from './Box';
import {
    BoxFromJSON,
    BoxFromJSONTyped,
    BoxToJSON,
} from './Box';
import type { CalendarBlock } from './CalendarBlock';
import {
    CalendarBlockFromJSON,
    CalendarBlockFromJSONTyped,
    CalendarBlockToJSON,
} from './CalendarBlock';
import type { CalendarDays } from './CalendarDays';
import {
    CalendarDaysFromJSON,
    CalendarDaysFromJSONTyped,
    CalendarDaysToJSON,
} from './CalendarDays';

/**
 * Calendar
 * @export
 * @interface Calendar
 */
export interface Calendar {
    /**
     * 
     * @type {Box}
     * @memberof Calendar
     */
    box: Box;
    /**
     * 
     * @type {CalendarDays}
     * @memberof Calendar
     */
    days: CalendarDays;
    /**
     * 
     * @type {CalendarBlock}
     * @memberof Calendar
     */
    styles: CalendarBlock;
    /**
     * 
     * @type {Array<string>}
     * @memberof Calendar
     */
    values: Array<string>;
}

/**
 * Check if a given object implements the Calendar interface.
 */
export function instanceOfCalendar(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "box" in value;
    isInstance = isInstance && "days" in value;
    isInstance = isInstance && "styles" in value;
    isInstance = isInstance && "values" in value;

    return isInstance;
}

export function CalendarFromJSON(json: any): Calendar {
    return CalendarFromJSONTyped(json, false);
}

export function CalendarFromJSONTyped(json: any, ignoreDiscriminator: boolean): Calendar {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'box': BoxFromJSON(json['box']),
        'days': CalendarDaysFromJSON(json['days']),
        'styles': CalendarBlockFromJSON(json['styles']),
        'values': json['values'],
    };
}

export function CalendarToJSON(value?: Calendar | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'box': BoxToJSON(value.box),
        'days': CalendarDaysToJSON(value.days),
        'styles': CalendarBlockToJSON(value.styles),
        'values': value.values,
    };
}

