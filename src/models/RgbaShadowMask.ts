/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * rgba shadow mask e.g. rgba(0, 0, 0, 0.8) 25%
 * @export
 * @interface RgbaShadowMask
 */
export interface RgbaShadowMask {
    /**
     * 
     * @type {number}
     * @memberof RgbaShadowMask
     */
    r: number;
    /**
     * 
     * @type {number}
     * @memberof RgbaShadowMask
     */
    g: number;
    /**
     * 
     * @type {number}
     * @memberof RgbaShadowMask
     */
    b: number;
    /**
     * 
     * @type {number}
     * @memberof RgbaShadowMask
     */
    a: number;
    /**
     * 
     * @type {number}
     * @memberof RgbaShadowMask
     */
    p?: number;
}

/**
 * Check if a given object implements the RgbaShadowMask interface.
 */
export function instanceOfRgbaShadowMask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "r" in value;
    isInstance = isInstance && "g" in value;
    isInstance = isInstance && "b" in value;
    isInstance = isInstance && "a" in value;

    return isInstance;
}

export function RgbaShadowMaskFromJSON(json: any): RgbaShadowMask {
    return RgbaShadowMaskFromJSONTyped(json, false);
}

export function RgbaShadowMaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): RgbaShadowMask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'r': json['r'],
        'g': json['g'],
        'b': json['b'],
        'a': json['a'],
        'p': !exists(json, 'p') ? undefined : json['p'],
    };
}

export function RgbaShadowMaskToJSON(value?: RgbaShadowMask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'r': value.r,
        'g': value.g,
        'b': value.b,
        'a': value.a,
        'p': value.p,
    };
}

