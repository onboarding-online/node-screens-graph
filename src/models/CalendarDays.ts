/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CalendarDay } from './CalendarDay';
import {
    CalendarDayFromJSON,
    CalendarDayFromJSONTyped,
    CalendarDayToJSON,
} from './CalendarDay';

/**
 * Calendar days config
 * @export
 * @interface CalendarDays
 */
export interface CalendarDays {
    /**
     * 
     * @type {CalendarDay}
     * @memberof CalendarDays
     */
    past: CalendarDay;
    /**
     * 
     * @type {CalendarDay}
     * @memberof CalendarDays
     */
    today: CalendarDay;
    /**
     * 
     * @type {CalendarDay}
     * @memberof CalendarDays
     */
    future: CalendarDay;
    /**
     * 
     * @type {CalendarDay}
     * @memberof CalendarDays
     */
    weekend: CalendarDay;
}

/**
 * Check if a given object implements the CalendarDays interface.
 */
export function instanceOfCalendarDays(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "past" in value;
    isInstance = isInstance && "today" in value;
    isInstance = isInstance && "future" in value;
    isInstance = isInstance && "weekend" in value;

    return isInstance;
}

export function CalendarDaysFromJSON(json: any): CalendarDays {
    return CalendarDaysFromJSONTyped(json, false);
}

export function CalendarDaysFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalendarDays {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'past': CalendarDayFromJSON(json['past']),
        'today': CalendarDayFromJSON(json['today']),
        'future': CalendarDayFromJSON(json['future']),
        'weekend': CalendarDayFromJSON(json['weekend']),
    };
}

export function CalendarDaysToJSON(value?: CalendarDays | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'past': CalendarDayToJSON(value.past),
        'today': CalendarDayToJSON(value.today),
        'future': CalendarDayToJSON(value.future),
        'weekend': CalendarDayToJSON(value.weekend),
    };
}

