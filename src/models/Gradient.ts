/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GradientKind } from './GradientKind';
import {
    GradientKindFromJSON,
    GradientKindFromJSONTyped,
    GradientKindToJSON,
} from './GradientKind';
import type { XYPoint } from './XYPoint';
import {
    XYPointFromJSON,
    XYPointFromJSONTyped,
    XYPointToJSON,
} from './XYPoint';

/**
 * Describe gradient
 * @export
 * @interface Gradient
 */
export interface Gradient {
    /**
     * List of colors
     * @type {Array<string>}
     * @memberof Gradient
     */
    colors: Array<string>;
    /**
     * List of locations
     * @type {Array<number>}
     * @memberof Gradient
     */
    locations?: Array<number>;
    /**
     * 
     * @type {XYPoint}
     * @memberof Gradient
     */
    startPoint: XYPoint;
    /**
     * 
     * @type {XYPoint}
     * @memberof Gradient
     */
    endPoint: XYPoint;
    /**
     * 
     * @type {GradientKind}
     * @memberof Gradient
     */
    gradientKind?: GradientKind;
    /**
     * Height in percentage
     * @type {number}
     * @memberof Gradient
     */
    heightPercentage?: number;
}

/**
 * Check if a given object implements the Gradient interface.
 */
export function instanceOfGradient(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "colors" in value;
    isInstance = isInstance && "startPoint" in value;
    isInstance = isInstance && "endPoint" in value;

    return isInstance;
}

export function GradientFromJSON(json: any): Gradient {
    return GradientFromJSONTyped(json, false);
}

export function GradientFromJSONTyped(json: any, ignoreDiscriminator: boolean): Gradient {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'colors': json['colors'],
        'locations': !exists(json, 'locations') ? undefined : json['locations'],
        'startPoint': XYPointFromJSON(json['startPoint']),
        'endPoint': XYPointFromJSON(json['endPoint']),
        'gradientKind': !exists(json, 'gradientKind') ? undefined : GradientKindFromJSON(json['gradientKind']),
        'heightPercentage': !exists(json, 'heightPercentage') ? undefined : json['heightPercentage'],
    };
}

export function GradientToJSON(value?: Gradient | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'colors': value.colors,
        'locations': value.locations,
        'startPoint': XYPointToJSON(value.startPoint),
        'endPoint': XYPointToJSON(value.endPoint),
        'gradientKind': GradientKindToJSON(value.gradientKind),
        'heightPercentage': value.heightPercentage,
    };
}

