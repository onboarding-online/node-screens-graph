/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BasicFooterBlock } from './BasicFooterBlock';
import {
    BasicFooterBlockFromJSON,
    BasicFooterBlockFromJSONTyped,
    BasicFooterBlockToJSON,
} from './BasicFooterBlock';
import type { BasicFooterKind } from './BasicFooterKind';
import {
    BasicFooterKindFromJSON,
    BasicFooterKindFromJSONTyped,
    BasicFooterKindToJSON,
} from './BasicFooterKind';
import type { Button } from './Button';
import {
    ButtonFromJSON,
    ButtonFromJSONTyped,
    ButtonToJSON,
} from './Button';
import type { PaywallFooterBlock } from './PaywallFooterBlock';
import {
    PaywallFooterBlockFromJSON,
    PaywallFooterBlockFromJSONTyped,
    PaywallFooterBlockToJSON,
} from './PaywallFooterBlock';
import type { PaywallFooterBottomContainer } from './PaywallFooterBottomContainer';
import {
    PaywallFooterBottomContainerFromJSON,
    PaywallFooterBottomContainerFromJSONTyped,
    PaywallFooterBottomContainerToJSON,
} from './PaywallFooterBottomContainer';
import type { Text } from './Text';
import {
    TextFromJSON,
    TextFromJSONTyped,
    TextToJSON,
} from './Text';

/**
 * Paywall footer
 * @export
 * @interface PaywallFooter
 */
export interface PaywallFooter {
    /**
     * 
     * @type {string}
     * @memberof PaywallFooter
     */
    paywallFooter: string;
    /**
     * 
     * @type {Button}
     * @memberof PaywallFooter
     */
    purchase?: Button;
    /**
     * 
     * @type {Text}
     * @memberof PaywallFooter
     */
    autoRenewLabel?: Text;
    /**
     * 
     * @type {PaywallFooterBottomContainer}
     * @memberof PaywallFooter
     */
    bottomContainer: PaywallFooterBottomContainer;
    /**
     * 
     * @type {PaywallFooterBlock}
     * @memberof PaywallFooter
     */
    styles: PaywallFooterBlock;
    /**
     * 
     * @type {Button}
     * @memberof PaywallFooter
     */
    button1?: Button;
    /**
     * 
     * @type {Button}
     * @memberof PaywallFooter
     */
    button2?: Button;
    /**
     * 
     * @type {BasicFooterKind}
     * @memberof PaywallFooter
     */
    kind?: BasicFooterKind;
}

/**
 * Check if a given object implements the PaywallFooter interface.
 */
export function instanceOfPaywallFooter(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "paywallFooter" in value;
    isInstance = isInstance && "bottomContainer" in value;
    isInstance = isInstance && "styles" in value;

    return isInstance;
}

export function PaywallFooterFromJSON(json: any): PaywallFooter {
    return PaywallFooterFromJSONTyped(json, false);
}

export function PaywallFooterFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaywallFooter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paywallFooter': json['paywallFooter'],
        'purchase': !exists(json, 'purchase') ? undefined : ButtonFromJSON(json['purchase']),
        'autoRenewLabel': !exists(json, 'autoRenewLabel') ? undefined : TextFromJSON(json['autoRenewLabel']),
        'bottomContainer': PaywallFooterBottomContainerFromJSON(json['bottomContainer']),
        'styles': PaywallFooterBlockFromJSON(json['styles']),
        'button1': !exists(json, 'button1') ? undefined : ButtonFromJSON(json['button1']),
        'button2': !exists(json, 'button2') ? undefined : ButtonFromJSON(json['button2']),
        'kind': !exists(json, 'kind') ? undefined : BasicFooterKindFromJSON(json['kind']),
    };
}

export function PaywallFooterToJSON(value?: PaywallFooter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paywallFooter': value.paywallFooter,
        'purchase': ButtonToJSON(value.purchase),
        'autoRenewLabel': TextToJSON(value.autoRenewLabel),
        'bottomContainer': PaywallFooterBottomContainerToJSON(value.bottomContainer),
        'styles': PaywallFooterBlockToJSON(value.styles),
        'button1': ButtonToJSON(value.button1),
        'button2': ButtonToJSON(value.button2),
        'kind': BasicFooterKindToJSON(value.kind),
    };
}

