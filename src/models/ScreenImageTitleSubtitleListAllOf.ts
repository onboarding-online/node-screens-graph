/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Image } from './Image';
import {
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './Image';
import type { RegularList } from './RegularList';
import {
    RegularListFromJSON,
    RegularListFromJSONTyped,
    RegularListToJSON,
} from './RegularList';
import type { Text } from './Text';
import {
    TextFromJSON,
    TextFromJSONTyped,
    TextToJSON,
} from './Text';

/**
 * Screen - Image/Title/Subtitle/Regular list
 * @export
 * @interface ScreenImageTitleSubtitleListAllOf
 */
export interface ScreenImageTitleSubtitleListAllOf {
    /**
     * 
     * @type {string}
     * @memberof ScreenImageTitleSubtitleListAllOf
     */
    imageTitleSubtitleListDescription: string;
    /**
     * 
     * @type {Image}
     * @memberof ScreenImageTitleSubtitleListAllOf
     */
    image: Image;
    /**
     * 
     * @type {Text}
     * @memberof ScreenImageTitleSubtitleListAllOf
     */
    title: Text;
    /**
     * 
     * @type {Text}
     * @memberof ScreenImageTitleSubtitleListAllOf
     */
    subtitle: Text;
    /**
     * 
     * @type {RegularList}
     * @memberof ScreenImageTitleSubtitleListAllOf
     */
    list: RegularList;
}

/**
 * Check if a given object implements the ScreenImageTitleSubtitleListAllOf interface.
 */
export function instanceOfScreenImageTitleSubtitleListAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "imageTitleSubtitleListDescription" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "subtitle" in value;
    isInstance = isInstance && "list" in value;

    return isInstance;
}

export function ScreenImageTitleSubtitleListAllOfFromJSON(json: any): ScreenImageTitleSubtitleListAllOf {
    return ScreenImageTitleSubtitleListAllOfFromJSONTyped(json, false);
}

export function ScreenImageTitleSubtitleListAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenImageTitleSubtitleListAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'imageTitleSubtitleListDescription': json['imageTitleSubtitleListDescription'],
        'image': ImageFromJSON(json['image']),
        'title': TextFromJSON(json['title']),
        'subtitle': TextFromJSON(json['subtitle']),
        'list': RegularListFromJSON(json['list']),
    };
}

export function ScreenImageTitleSubtitleListAllOfToJSON(value?: ScreenImageTitleSubtitleListAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'imageTitleSubtitleListDescription': value.imageTitleSubtitleListDescription,
        'image': ImageToJSON(value.image),
        'title': TextToJSON(value.title),
        'subtitle': TextToJSON(value.subtitle),
        'list': RegularListToJSON(value.list),
    };
}

