/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseDividerBlock } from './BaseDividerBlock';
import {
    BaseDividerBlockFromJSON,
    BaseDividerBlockFromJSONTyped,
    BaseDividerBlockToJSON,
} from './BaseDividerBlock';
import type { BaseDividerKind } from './BaseDividerKind';
import {
    BaseDividerKindFromJSON,
    BaseDividerKindFromJSONTyped,
    BaseDividerKindToJSON,
} from './BaseDividerKind';

/**
 * Base divider parameters
 * @export
 * @interface BaseDivider
 */
export interface BaseDivider {
    /**
     * 
     * @type {BaseDividerKind}
     * @memberof BaseDivider
     */
    kind: BaseDividerKind;
    /**
     * 
     * @type {BaseDividerBlock}
     * @memberof BaseDivider
     */
    styles: BaseDividerBlock;
}

/**
 * Check if a given object implements the BaseDivider interface.
 */
export function instanceOfBaseDivider(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "styles" in value;

    return isInstance;
}

export function BaseDividerFromJSON(json: any): BaseDivider {
    return BaseDividerFromJSONTyped(json, false);
}

export function BaseDividerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseDivider {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': BaseDividerKindFromJSON(json['kind']),
        'styles': BaseDividerBlockFromJSON(json['styles']),
    };
}

export function BaseDividerToJSON(value?: BaseDivider | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': BaseDividerKindToJSON(value.kind),
        'styles': BaseDividerBlockToJSON(value.styles),
    };
}

