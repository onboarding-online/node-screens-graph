/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BasicFooterBlock } from './BasicFooterBlock';
import {
    BasicFooterBlockFromJSON,
    BasicFooterBlockFromJSONTyped,
    BasicFooterBlockToJSON,
} from './BasicFooterBlock';
import type { BasicFooterKind } from './BasicFooterKind';
import {
    BasicFooterKindFromJSON,
    BasicFooterKindFromJSONTyped,
    BasicFooterKindToJSON,
} from './BasicFooterKind';
import type { Button } from './Button';
import {
    ButtonFromJSON,
    ButtonFromJSONTyped,
    ButtonToJSON,
} from './Button';

/**
 * Footer
 * @export
 * @interface Footer
 */
export interface Footer {
    /**
     * 
     * @type {Button}
     * @memberof Footer
     */
    button1?: Button;
    /**
     * 
     * @type {Button}
     * @memberof Footer
     */
    button2?: Button;
    /**
     * 
     * @type {BasicFooterKind}
     * @memberof Footer
     */
    kind?: BasicFooterKind;
    /**
     * 
     * @type {BasicFooterBlock}
     * @memberof Footer
     */
    styles?: BasicFooterBlock;
}

/**
 * Check if a given object implements the Footer interface.
 */
export function instanceOfFooter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FooterFromJSON(json: any): Footer {
    return FooterFromJSONTyped(json, false);
}

export function FooterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Footer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'button1': !exists(json, 'button1') ? undefined : ButtonFromJSON(json['button1']),
        'button2': !exists(json, 'button2') ? undefined : ButtonFromJSON(json['button2']),
        'kind': !exists(json, 'kind') ? undefined : BasicFooterKindFromJSON(json['kind']),
        'styles': !exists(json, 'styles') ? undefined : BasicFooterBlockFromJSON(json['styles']),
    };
}

export function FooterToJSON(value?: Footer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'button1': ButtonToJSON(value.button1),
        'button2': ButtonToJSON(value.button2),
        'kind': BasicFooterKindToJSON(value.kind),
        'styles': BasicFooterBlockToJSON(value.styles),
    };
}

