/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BasicPaywallBodyKind } from './BasicPaywallBodyKind';
import {
    BasicPaywallBodyKindFromJSON,
    BasicPaywallBodyKindFromJSONTyped,
    BasicPaywallBodyKindToJSON,
} from './BasicPaywallBodyKind';
import type { BasicPaywallBodyStyle } from './BasicPaywallBodyStyle';
import {
    BasicPaywallBodyStyleFromJSON,
    BasicPaywallBodyStyleFromJSONTyped,
    BasicPaywallBodyStyleToJSON,
} from './BasicPaywallBodyStyle';
import type { BlurKind } from './BlurKind';
import {
    BlurKindFromJSON,
    BlurKindFromJSONTyped,
    BlurKindToJSON,
} from './BlurKind';
import type { PaywallImageVerticalPositionKind } from './PaywallImageVerticalPositionKind';
import {
    PaywallImageVerticalPositionKindFromJSON,
    PaywallImageVerticalPositionKindFromJSONTyped,
    PaywallImageVerticalPositionKindToJSON,
} from './PaywallImageVerticalPositionKind';

/**
 * Styles for ScreenBasicPaywall
 * @export
 * @interface ScreenBasicPaywallBlockAllOf
 */
export interface ScreenBasicPaywallBlockAllOf {
    /**
     * 
     * @type {string}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyColor?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyOpacity?: string;
    /**
     * 
     * @type {PaywallImageVerticalPositionKind}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    imageVerticalPosition?: PaywallImageVerticalPositionKind;
    /**
     * 
     * @type {string}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyBackgroundColor?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyBackgroundOpacity?: number;
    /**
     * 
     * @type {BasicPaywallBodyKind}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyKind?: BasicPaywallBodyKind;
    /**
     * 
     * @type {BasicPaywallBodyStyle}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    bodyStyle?: BasicPaywallBodyStyle;
    /**
     * 
     * @type {BlurKind}
     * @memberof ScreenBasicPaywallBlockAllOf
     */
    blur?: BlurKind;
}

/**
 * Check if a given object implements the ScreenBasicPaywallBlockAllOf interface.
 */
export function instanceOfScreenBasicPaywallBlockAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenBasicPaywallBlockAllOfFromJSON(json: any): ScreenBasicPaywallBlockAllOf {
    return ScreenBasicPaywallBlockAllOfFromJSONTyped(json, false);
}

export function ScreenBasicPaywallBlockAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenBasicPaywallBlockAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bodyColor': !exists(json, 'bodyColor') ? undefined : json['bodyColor'],
        'bodyOpacity': !exists(json, 'bodyOpacity') ? undefined : json['bodyOpacity'],
        'imageVerticalPosition': !exists(json, 'imageVerticalPosition') ? undefined : PaywallImageVerticalPositionKindFromJSON(json['imageVerticalPosition']),
        'bodyBackgroundColor': !exists(json, 'bodyBackgroundColor') ? undefined : json['bodyBackgroundColor'],
        'bodyBackgroundOpacity': !exists(json, 'bodyBackgroundOpacity') ? undefined : json['bodyBackgroundOpacity'],
        'bodyKind': !exists(json, 'bodyKind') ? undefined : BasicPaywallBodyKindFromJSON(json['bodyKind']),
        'bodyStyle': !exists(json, 'bodyStyle') ? undefined : BasicPaywallBodyStyleFromJSON(json['bodyStyle']),
        'blur': !exists(json, 'blur') ? undefined : BlurKindFromJSON(json['blur']),
    };
}

export function ScreenBasicPaywallBlockAllOfToJSON(value?: ScreenBasicPaywallBlockAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bodyColor': value.bodyColor,
        'bodyOpacity': value.bodyOpacity,
        'imageVerticalPosition': PaywallImageVerticalPositionKindToJSON(value.imageVerticalPosition),
        'bodyBackgroundColor': value.bodyBackgroundColor,
        'bodyBackgroundOpacity': value.bodyBackgroundOpacity,
        'bodyKind': BasicPaywallBodyKindToJSON(value.bodyKind),
        'bodyStyle': BasicPaywallBodyStyleToJSON(value.bodyStyle),
        'blur': BlurKindToJSON(value.blur),
    };
}

