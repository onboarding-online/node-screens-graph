/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DashesPageIndicatorBlock } from './DashesPageIndicatorBlock';
import {
    DashesPageIndicatorBlockFromJSON,
    DashesPageIndicatorBlockFromJSONTyped,
    DashesPageIndicatorBlockToJSON,
} from './DashesPageIndicatorBlock';
import type { Image } from './Image';
import {
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './Image';
import type { Text } from './Text';
import {
    TextFromJSON,
    TextFromJSONTyped,
    TextToJSON,
} from './Text';

/**
 * Dashes page indicator
 * @export
 * @interface DashesPageIndicator
 */
export interface DashesPageIndicator {
    /**
     * 
     * @type {number}
     * @memberof DashesPageIndicator
     */
    numberOfDashes: number;
    /**
     * 
     * @type {Image}
     * @memberof DashesPageIndicator
     */
    image?: Image;
    /**
     * 
     * @type {Text}
     * @memberof DashesPageIndicator
     */
    title?: Text;
    /**
     * 
     * @type {number}
     * @memberof DashesPageIndicator
     */
    numOption1?: number;
    /**
     * 
     * @type {number}
     * @memberof DashesPageIndicator
     */
    numOption2?: number;
    /**
     * 
     * @type {string}
     * @memberof DashesPageIndicator
     */
    strOption1?: string;
    /**
     * 
     * @type {string}
     * @memberof DashesPageIndicator
     */
    strOption2?: string;
    /**
     * 
     * @type {DashesPageIndicatorBlock}
     * @memberof DashesPageIndicator
     */
    styles: DashesPageIndicatorBlock;
}

/**
 * Check if a given object implements the DashesPageIndicator interface.
 */
export function instanceOfDashesPageIndicator(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "numberOfDashes" in value;
    isInstance = isInstance && "styles" in value;

    return isInstance;
}

export function DashesPageIndicatorFromJSON(json: any): DashesPageIndicator {
    return DashesPageIndicatorFromJSONTyped(json, false);
}

export function DashesPageIndicatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashesPageIndicator {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'numberOfDashes': json['numberOfDashes'],
        'image': !exists(json, 'image') ? undefined : ImageFromJSON(json['image']),
        'title': !exists(json, 'title') ? undefined : TextFromJSON(json['title']),
        'numOption1': !exists(json, 'numOption1') ? undefined : json['numOption1'],
        'numOption2': !exists(json, 'numOption2') ? undefined : json['numOption2'],
        'strOption1': !exists(json, 'strOption1') ? undefined : json['strOption1'],
        'strOption2': !exists(json, 'strOption2') ? undefined : json['strOption2'],
        'styles': DashesPageIndicatorBlockFromJSON(json['styles']),
    };
}

export function DashesPageIndicatorToJSON(value?: DashesPageIndicator | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'numberOfDashes': value.numberOfDashes,
        'image': ImageToJSON(value.image),
        'title': TextToJSON(value.title),
        'numOption1': value.numOption1,
        'numOption2': value.numOption2,
        'strOption1': value.strOption1,
        'strOption2': value.strOption2,
        'styles': DashesPageIndicatorBlockToJSON(value.styles),
    };
}

