/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Box } from './Box';
import {
    BoxFromJSON,
    BoxFromJSONTyped,
    BoxToJSON,
} from './Box';
import type { ElementTimer } from './ElementTimer';
import {
    ElementTimerFromJSON,
    ElementTimerFromJSONTyped,
    ElementTimerToJSON,
} from './ElementTimer';
import type { ProgressBarBlock } from './ProgressBarBlock';
import {
    ProgressBarBlockFromJSON,
    ProgressBarBlockFromJSONTyped,
    ProgressBarBlockToJSON,
} from './ProgressBarBlock';
import type { ProgressBarItem } from './ProgressBarItem';
import {
    ProgressBarItemFromJSON,
    ProgressBarItemFromJSONTyped,
    ProgressBarItemToJSON,
} from './ProgressBarItem';
import type { ProgressBarKind } from './ProgressBarKind';
import {
    ProgressBarKindFromJSON,
    ProgressBarKindFromJSONTyped,
    ProgressBarKindToJSON,
} from './ProgressBarKind';
import type { ProgressBarLabel } from './ProgressBarLabel';
import {
    ProgressBarLabelFromJSON,
    ProgressBarLabelFromJSONTyped,
    ProgressBarLabelToJSON,
} from './ProgressBarLabel';

/**
 * Progress bar element
 * @export
 * @interface ProgressBar
 */
export interface ProgressBar {
    /**
     * 
     * @type {ProgressBarKind}
     * @memberof ProgressBar
     */
    kind: ProgressBarKind;
    /**
     * 
     * @type {ElementTimer}
     * @memberof ProgressBar
     */
    timer: ElementTimer;
    /**
     * Sections for progress bar
     * @type {Array<ProgressBarItem>}
     * @memberof ProgressBar
     */
    items: Array<ProgressBarItem>;
    /**
     * 
     * @type {ProgressBarBlock}
     * @memberof ProgressBar
     */
    styles: ProgressBarBlock;
    /**
     * 
     * @type {ProgressBarLabel}
     * @memberof ProgressBar
     */
    label: ProgressBarLabel;
    /**
     * 
     * @type {Box}
     * @memberof ProgressBar
     */
    box: Box;
}

/**
 * Check if a given object implements the ProgressBar interface.
 */
export function instanceOfProgressBar(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "timer" in value;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "styles" in value;
    isInstance = isInstance && "label" in value;
    isInstance = isInstance && "box" in value;

    return isInstance;
}

export function ProgressBarFromJSON(json: any): ProgressBar {
    return ProgressBarFromJSONTyped(json, false);
}

export function ProgressBarFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProgressBar {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': ProgressBarKindFromJSON(json['kind']),
        'timer': ElementTimerFromJSON(json['timer']),
        'items': ((json['items'] as Array<any>).map(ProgressBarItemFromJSON)),
        'styles': ProgressBarBlockFromJSON(json['styles']),
        'label': ProgressBarLabelFromJSON(json['label']),
        'box': BoxFromJSON(json['box']),
    };
}

export function ProgressBarToJSON(value?: ProgressBar | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kind': ProgressBarKindToJSON(value.kind),
        'timer': ElementTimerToJSON(value.timer),
        'items': ((value.items as Array<any>).map(ProgressBarItemToJSON)),
        'styles': ProgressBarBlockToJSON(value.styles),
        'label': ProgressBarLabelToJSON(value.label),
        'box': BoxToJSON(value.box),
    };
}

