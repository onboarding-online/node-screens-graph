/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Button } from './Button';
import {
    ButtonFromJSON,
    ButtonFromJSONTyped,
    ButtonToJSON,
} from './Button';
import type { DashesPageIndicator } from './DashesPageIndicator';
import {
    DashesPageIndicatorFromJSON,
    DashesPageIndicatorFromJSONTyped,
    DashesPageIndicatorToJSON,
} from './DashesPageIndicator';
import type { PageIndicator } from './PageIndicator';
import {
    PageIndicatorFromJSON,
    PageIndicatorFromJSONTyped,
    PageIndicatorToJSON,
} from './PageIndicator';
import type { PageIndicatorKind } from './PageIndicatorKind';
import {
    PageIndicatorKindFromJSON,
    PageIndicatorKindFromJSONTyped,
    PageIndicatorKindToJSON,
} from './PageIndicatorKind';

/**
 * Basic navigation bar
 * @export
 * @interface NavigationBar
 */
export interface NavigationBar {
    /**
     * 
     * @type {Button}
     * @memberof NavigationBar
     */
    back?: Button;
    /**
     * 
     * @type {Button}
     * @memberof NavigationBar
     */
    skip?: Button;
    /**
     * 
     * @type {PageIndicator}
     * @memberof NavigationBar
     */
    pageIndicator?: PageIndicator;
    /**
     * 
     * @type {PageIndicatorKind}
     * @memberof NavigationBar
     */
    pageIndicatorKind?: PageIndicatorKind;
    /**
     * 
     * @type {DashesPageIndicator}
     * @memberof NavigationBar
     */
    dashesPageIndicator?: DashesPageIndicator;
}

/**
 * Check if a given object implements the NavigationBar interface.
 */
export function instanceOfNavigationBar(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NavigationBarFromJSON(json: any): NavigationBar {
    return NavigationBarFromJSONTyped(json, false);
}

export function NavigationBarFromJSONTyped(json: any, ignoreDiscriminator: boolean): NavigationBar {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'back': !exists(json, 'back') ? undefined : ButtonFromJSON(json['back']),
        'skip': !exists(json, 'skip') ? undefined : ButtonFromJSON(json['skip']),
        'pageIndicator': !exists(json, 'pageIndicator') ? undefined : PageIndicatorFromJSON(json['pageIndicator']),
        'pageIndicatorKind': !exists(json, 'pageIndicatorKind') ? undefined : PageIndicatorKindFromJSON(json['pageIndicatorKind']),
        'dashesPageIndicator': !exists(json, 'dashesPageIndicator') ? undefined : DashesPageIndicatorFromJSON(json['dashesPageIndicator']),
    };
}

export function NavigationBarToJSON(value?: NavigationBar | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'back': ButtonToJSON(value.back),
        'skip': ButtonToJSON(value.skip),
        'pageIndicator': PageIndicatorToJSON(value.pageIndicator),
        'pageIndicatorKind': PageIndicatorKindToJSON(value.pageIndicatorKind),
        'dashesPageIndicator': DashesPageIndicatorToJSON(value.dashesPageIndicator),
    };
}

