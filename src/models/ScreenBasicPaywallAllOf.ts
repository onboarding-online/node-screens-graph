/* tslint:disable */
/* eslint-disable */
/**
 * Onboarding online screens graph models
 * Onboarding online screens graph models and interfaces
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyFormatKind } from './CurrencyFormatKind';
import {
    CurrencyFormatKindFromJSON,
    CurrencyFormatKindFromJSONTyped,
    CurrencyFormatKindToJSON,
} from './CurrencyFormatKind';
import type { Divider } from './Divider';
import {
    DividerFromJSON,
    DividerFromJSONTyped,
    DividerToJSON,
} from './Divider';
import type { Loader } from './Loader';
import {
    LoaderFromJSON,
    LoaderFromJSONTyped,
    LoaderToJSON,
} from './Loader';
import type { Media } from './Media';
import {
    MediaFromJSON,
    MediaFromJSONTyped,
    MediaToJSON,
} from './Media';
import type { PaywallFooter } from './PaywallFooter';
import {
    PaywallFooterFromJSON,
    PaywallFooterFromJSONTyped,
    PaywallFooterToJSON,
} from './PaywallFooter';
import type { PaywallNavigationBar } from './PaywallNavigationBar';
import {
    PaywallNavigationBarFromJSON,
    PaywallNavigationBarFromJSONTyped,
    PaywallNavigationBarToJSON,
} from './PaywallNavigationBar';
import type { PurchaseFlag } from './PurchaseFlag';
import {
    PurchaseFlagFromJSON,
    PurchaseFlagFromJSONTyped,
    PurchaseFlagToJSON,
} from './PurchaseFlag';
import type { RegularList } from './RegularList';
import {
    RegularListFromJSON,
    RegularListFromJSONTyped,
    RegularListToJSON,
} from './RegularList';
import type { ScreenBasicPaywallBlock } from './ScreenBasicPaywallBlock';
import {
    ScreenBasicPaywallBlockFromJSON,
    ScreenBasicPaywallBlockFromJSONTyped,
    ScreenBasicPaywallBlockToJSON,
} from './ScreenBasicPaywallBlock';
import type { SubscriptionList } from './SubscriptionList';
import {
    SubscriptionListFromJSON,
    SubscriptionListFromJSONTyped,
    SubscriptionListToJSON,
} from './SubscriptionList';
import type { Text } from './Text';
import {
    TextFromJSON,
    TextFromJSONTyped,
    TextToJSON,
} from './Text';

/**
 * Screen basic paywall
 * @export
 * @interface ScreenBasicPaywallAllOf
 */
export interface ScreenBasicPaywallAllOf {
    /**
     * 
     * @type {string}
     * @memberof ScreenBasicPaywallAllOf
     */
    screenBasicPaywall: string;
    /**
     * 
     * @type {PaywallNavigationBar}
     * @memberof ScreenBasicPaywallAllOf
     */
    navigationBar?: PaywallNavigationBar;
    /**
     * 
     * @type {PaywallFooter}
     * @memberof ScreenBasicPaywallAllOf
     */
    footer?: PaywallFooter;
    /**
     * 
     * @type {Text}
     * @memberof ScreenBasicPaywallAllOf
     */
    title: Text;
    /**
     * 
     * @type {Text}
     * @memberof ScreenBasicPaywallAllOf
     */
    subtitle: Text;
    /**
     * 
     * @type {Divider}
     * @memberof ScreenBasicPaywallAllOf
     */
    divider?: Divider;
    /**
     * 
     * @type {Media}
     * @memberof ScreenBasicPaywallAllOf
     */
    media?: Media;
    /**
     * 
     * @type {RegularList}
     * @memberof ScreenBasicPaywallAllOf
     */
    list: RegularList;
    /**
     * 
     * @type {Loader}
     * @memberof ScreenBasicPaywallAllOf
     */
    loader?: Loader;
    /**
     * Purchase flags
     * @type {Array<PurchaseFlag>}
     * @memberof ScreenBasicPaywallAllOf
     */
    flags: Array<PurchaseFlag>;
    /**
     * 
     * @type {SubscriptionList}
     * @memberof ScreenBasicPaywallAllOf
     */
    subscriptions: SubscriptionList;
    /**
     * 
     * @type {CurrencyFormatKind}
     * @memberof ScreenBasicPaywallAllOf
     */
    currencyFormat: CurrencyFormatKind;
    /**
     * 
     * @type {ScreenBasicPaywallBlock}
     * @memberof ScreenBasicPaywallAllOf
     */
    styles: ScreenBasicPaywallBlock;
}

/**
 * Check if a given object implements the ScreenBasicPaywallAllOf interface.
 */
export function instanceOfScreenBasicPaywallAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "screenBasicPaywall" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "subtitle" in value;
    isInstance = isInstance && "list" in value;
    isInstance = isInstance && "flags" in value;
    isInstance = isInstance && "subscriptions" in value;
    isInstance = isInstance && "currencyFormat" in value;
    isInstance = isInstance && "styles" in value;

    return isInstance;
}

export function ScreenBasicPaywallAllOfFromJSON(json: any): ScreenBasicPaywallAllOf {
    return ScreenBasicPaywallAllOfFromJSONTyped(json, false);
}

export function ScreenBasicPaywallAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenBasicPaywallAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'screenBasicPaywall': json['screenBasicPaywall'],
        'navigationBar': !exists(json, 'navigationBar') ? undefined : PaywallNavigationBarFromJSON(json['navigationBar']),
        'footer': !exists(json, 'footer') ? undefined : PaywallFooterFromJSON(json['footer']),
        'title': TextFromJSON(json['title']),
        'subtitle': TextFromJSON(json['subtitle']),
        'divider': !exists(json, 'divider') ? undefined : DividerFromJSON(json['divider']),
        'media': !exists(json, 'media') ? undefined : MediaFromJSON(json['media']),
        'list': RegularListFromJSON(json['list']),
        'loader': !exists(json, 'loader') ? undefined : LoaderFromJSON(json['loader']),
        'flags': ((json['flags'] as Array<any>).map(PurchaseFlagFromJSON)),
        'subscriptions': SubscriptionListFromJSON(json['subscriptions']),
        'currencyFormat': CurrencyFormatKindFromJSON(json['currencyFormat']),
        'styles': ScreenBasicPaywallBlockFromJSON(json['styles']),
    };
}

export function ScreenBasicPaywallAllOfToJSON(value?: ScreenBasicPaywallAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'screenBasicPaywall': value.screenBasicPaywall,
        'navigationBar': PaywallNavigationBarToJSON(value.navigationBar),
        'footer': PaywallFooterToJSON(value.footer),
        'title': TextToJSON(value.title),
        'subtitle': TextToJSON(value.subtitle),
        'divider': DividerToJSON(value.divider),
        'media': MediaToJSON(value.media),
        'list': RegularListToJSON(value.list),
        'loader': LoaderToJSON(value.loader),
        'flags': ((value.flags as Array<any>).map(PurchaseFlagToJSON)),
        'subscriptions': SubscriptionListToJSON(value.subscriptions),
        'currencyFormat': CurrencyFormatKindToJSON(value.currencyFormat),
        'styles': ScreenBasicPaywallBlockToJSON(value.styles),
    };
}

